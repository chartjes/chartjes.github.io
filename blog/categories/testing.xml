<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Grumpy Learning]]></title>
    <link href="https://grumpy-learning.com/blog/categories/testing.xml" rel="self"/>
    <link href="https://grumpy-learning.com/"/>
    <updated>
Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated in /Users/chartjes/grumpy-learning.com/vendor/twig/twig/src/Extension/CoreExtension.php on line 522
2022-03-09T16:24:34+00:00</updated>
    <id>https://grumpy-learning.com/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[March 2022 PHP TDD Training]]></title>
            <link href="https://grumpy-learning.com/blog/2022/03/07/march-2022-tdd-training/"/>
            <updated>2022-03-07T00:00:00+00:00</updated>
            <id>https://grumpy-learning.com/blog/2022/03/07/march-2022-tdd-training/</id>
            <content type="html"><![CDATA[<h2 id="tl%3Bdr">TL;DR</h2>

<p>I am running a remote Ensemble (mob) Programming session focussing
on learning the skills to do Test-Driven Development of PHP code.
on March 25th starting at 10AM Eastern time. The cost of
this 2-3 hour session is US$229. Space is limited
to 5 people so please email me at chartjes@grumpy-learning.com
for more details.</p>

<p>You can sign up for the event using this link on <a href="https://www.eventbrite.ca/e/ensemble-programming-php-tdd-training-tickets-293851496737">Eventbrite</a></p>

<h2 id="what-will-we-be-learning%3F">What Will We Be Learning?</h2>

<p>To be up front -- this is about building skills first and worrying
about perfect tests second. We are focussing on learning the building
blocks of doing Test-Driven Development in PHP using PHPUnit.</p>

<p>We'll also likely be covering:</p>

<ul>
<li>building test scenarios</li>
<li>the Arrange-Act-Assert test organization pattern</li>
<li>how to identify dependencies required for tests</li>
<li>common test-centric code refactoring practices</li>
</ul>

<p>We can't go in-depth in such a short period of time but you will come
out of this having participated in building up a test suite
to verify PHP code written to solve a specific set
of problems behaves as expected.</p>

<p>Testing is hard, even harder to learn on your own. I hope this
training helps steer you in the direction of learning the
basic and growing your skills as part of your path towards building
effective test suites for your PHP code.</p>

<h2 id="ensemble-programming-training">Ensemble Programming Training</h2>

<p>The idea behind ensemble programming (it might be more familiar as "mob programming")
is to have pairs of people work together to solve an issue.
In this case, the goal is to have me guide the participants
through learning the basics of Test-Driven Development with
PHP code.</p>

<p>A pair of participants will work together as Driver and Navigator
while the other participants watch. This is the key part! If you're 
not comfortable working with strangers then this is not
the training session for you!</p>

<h3 id="drivers">Drivers</h3>

<p>Drivers are the ones doing all the typing and executing the
test cases and carries out the intent of the Navigator. If
you get stuck, it's okay to ask but please let the Navigator
dictate what is being done!</p>

<h3 id="navigators">Navigators</h3>

<p>Navigators are the ones who declare what work is being done
for the session, only providing more detail if the Driver asks.</p>

<p>Examples for this training might be:</p>

<ul>
<li>"Outline what are Arrange-Act-Assert blocks are going to be"</li>
<li>"Refactor the main loop on line 18 to include a new conditional statement for this new test scenario"</li>
</ul>

<p>Remember, this is a collaborative process!</p>

<h3 id="session-length">Session Length</h3>

<p>The sessions are kept short at 5-7 minutes per pair before
the existing Driver moves to be the Navigator and a new Driver
takes over.</p>

<h2 id="tools-required">Tools Required</h2>

<p>To participate in this training session, you need the following:</p>

<ul>
<li>be willing to work with potential strangers</li>
<li>be willing to share your screen</li>
<li>have a GitHub account</li>
<li><a href="https://mob.sh/">mob.sh</a>, the code collaboration tool we will be using, installed</li>
<li><a href="https://zoom.us">Zoom</a> installed</li>
<li>Sufficient video bandwidth to allow screen-sharing</li>
<li>PHP 7.4 or greater installed (I will be using PHP 8.1 myself)</li>
</ul>

<p>You can use whatever editor/IDE you want. This will be a rare chance
to watch me slice and dice code inside <a href="https://neovim.io/">NeoVim</a>.</p>

<h2 id="how-do-i-sign-up%3F">How Do I Sign Up?</h2>

<p>If all of this hasn't scared you off, send an email to chartjes@grumpy-learning.com
where I will be happy to answer any questions you have. To purchase a ticket for
the event, please visit the event link on <a href="https://www.eventbrite.ca/e/ensemble-programming-php-tdd-training-tickets-293851496737">Eventbrite</a>.</p>

<p>Hope to see you on March 25th!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Asking Companies About Testing]]></title>
            <link href="https://grumpy-learning.com/blog/2022/01/14/asking-companies-about-testing/"/>
            <updated>2022-01-14T00:00:00+00:00</updated>
            <id>https://grumpy-learning.com/blog/2022/01/14/asking-companies-about-testing/</id>
            <content type="html"><![CDATA[<p>This post could also be subtitled "The Grumpy Programmer's Guide to Getting Rejected at Interviews".</p>

<p>Someone tagged me in a tweet...</p>

<blockquote>
  <p><em>Book idea for @grmpyprogrammer: an interviewing guide for job seekers wanting to get an idea of how dedicated companies are to testing. Questions to ask, ways to gauge the culture, etc.</em>
  <em>(Originally posted on Twitter at <a href="https://twitter.com/n00bJackleCity/status/1481632465403981824?s=20">https://twitter.com/n00bJackleCity/status/1481632465403981824?s=20</a>)</em></p>
</blockquote>

<p>...and it got me to thinking about where to start with
a request like this one. My personal opinion that there
really isn't a book in here but it did get me to start thinking
about what sort of questions you should be asking.</p>

<p>Again, keep in mind that all of this is just my opinion. One based
on many years of experience, but still an opinion.</p>

<h2 id="why-does-it-matter%3F">Why Does It Matter?</h2>

<p>In my experience, companies that make a commitment to doing automated
testing also tend to make a commitment towards "quality"
in their coding practices and "automation" in their software development tooling.
The reason those are in quotes is because they definitely can mean 
different things depending on the company.</p>

<p>Now, again, in my experience, you are likely to have more success
in solving problems and growing your own skills as a developer if you work
in an environment where they value those things.</p>

<p>After all, just because we can get paid a lot of money to dig in the pixel
mines doesn't mean we should be forced to eat a shit sandwich. We should at 
least have a choice of the additional toppings.</p>

<h2 id="what-questions-should-i-ask%3F">What Questions Should I Ask?</h2>

<p>Like a lot of things related to programming, I find it helpful to start at the
end result you want and work backwards to figure out what needs to be done. Therefore
I think the first two things to ask are:</p>

<blockquote>
  <blockquote>
    <p>What things always have to work when you push changes into production
    and how do you verify that it works as expected?</p>
  </blockquote>
</blockquote>

<p>This question cuts to the heart of the issue: what matters and how do we make
sure it stays that way.</p>

<p>What you are looking for is clear statements about what matters and clearer statements
about how they verify it. Again, not every company has invested the time and money
into having the ability for code changes to seamlessly flow from a development
environment into production, accompanied by effective automated tests and a clear understanding
of outcomes.</p>

<p>If they already have some kind of commitment to testing, asking follow-up questions
like this are also very informative:</p>

<blockquote>
  <blockquote>
    <p>What do you like about your current testing practices and what do you want to change?</p>
  </blockquote>
</blockquote>

<p>Pay as much attention to what they like as what they dislike. That will give you an idea
of what challenges lie ahead if you want to be the person making the changes.</p>

<p>Finally, if you want to find out about what their commitment to quality is, I feel like
a great question is:</p>

<blockquote>
  <blockquote>
    <p>Tell me about how code gets from the developer and up into production</p>
  </blockquote>
</blockquote>

<p>Look for things like:</p>

<ul>
<li>code reviews</li>
<li>coding standards</li>
<li>static code analysis</li>
<li>continuous integration systems</li>
<li>separate staging and production environments</li>
<li>automated deployments</li>
</ul>

<p>Not all of these things are going to guarantee great results (nothing
does and never believe anyone who says it) but, when taken together,
they show a commitment to making sure that:</p>

<ul>
<li>the intent of code is clear</li>
<li>others can understand the code</li>
<li>the code is taking advantage of appropriate language features</li>
<li>the team uses tooling that integrates with version control to automate error-prone manual checklists</li>
<li>application / end-to-end testing happens before it reaches production</li>
<li>repeatable processes ensure consistency</li>
</ul>

<h2 id="so-now-what%3F">So Now What?</h2>

<p>It's hard for me to give any more specific advice other than "don't be 
afraid to ask more questions based on the answers you are hearing." 
If we're being honest, most companies aren't doing all that stuff I listed
above. You can always start at the bottom ("we try and manually test all changes")
and work as hard as you are allowed to on getting to the point where you
have an automated test suite catching issues before your users do.</p>
]]></content>
        </entry>
    </feed>